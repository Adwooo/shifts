<%= unobtrusive_datepicker_include_tags %>
  <p>
  <%
        start_time = (params[:date] ? Time.parse(params[:date]) : Time.now)
      
        if params[:xPercentage]
          @dept_start_hour = current_department.department_config.schedule_start / 60
          @dept_end_hour = current_department.department_config.schedule_end / 60
          @hours_per_day = (@dept_end_hour - @dept_start_hour)
          start_time += @dept_start_hour.hours + (@hours_per_day * params[:xPercentage].to_f) * 3600
        end
      %>
    <%= f.label :start_time %><br />
    <%= f.unobtrusive_datetime_picker :start, :default => start_time, :minute_step => @department.department_config.time_increment %>
  </p>
  <p>
    <%= f.label :end_time %><br />
    <%= f.unobtrusive_datetime_picker :end, :default => start_time + 1.hour, :minute_step => @department.department_config.time_increment %>
  </p>
  <p>
    <%= f.label :location %><br />
    <%= select_tag 'shift[location_id]', option_groups_from_collection_for_select(@department.loc_groups, :locations, :name, :id, :name, @shift.location ? @shift.location.id : nil)%><br />
  </p>
  <% if current_user.is_admin_of?(current_department) %>
    <p>
      <%= f.label :calendar %><br />
      <%= f.collection_select(:calendar_id, @department.calendars, :id, :name) %>
    </p>
    <p>
      <%= f.label :user %><br />
      <%= f.collection_select(:user_id, @department.users, :id, :name, {:prompt => "Select a user"}) %>
    </p>
    <p>
      <%= f.label :power_signed_up %><br/>
      <%= f.check_box :power_signed_up %> (Ignore restrictions and time slots)
    </p>
  <% end %>
