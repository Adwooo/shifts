<% unobtrusive_datepicker_includes %>

<% form_for (params[:id] ? @sub_request : [:shift, @sub_request]) do |f| %>
  <% @shift = Shift.find(params[:shift_id]) if params[:shift_id] %>
  <div id ="errors">
    <%= render :partial => "error_messages", :locals => {:f => f} %>
  </div>

  <p><h3>Time that you need someone to take for this sub request:</h3></p>

  <p>
    <%= f.label "Start" %><br />
    <%= f.time_select :mandatory_start, {
                                          :simple_time_select => true,
                                          :time_separator => "",
                                          :minute_interval => @department.department_config.time_increment,

                                          :start_time => @shift.start,
                                          :end_time => @shift.end,
                                          :include_start_time => true,
                                          :include_end_time => false,
                                          :default => (params[:id] ? @sub_request.mandatory_start : @shift.start),
                                          } %>
  </p>
  <p>
    <%= f.label "End" %><br />
    <%= f.time_select :mandatory_end, {
                                          :simple_time_select => true,
                                          :time_separator => "",
                                          :minute_interval => @department.department_config.time_increment,

                                          :start_time => @shift.start,
                                          :end_time => @shift.end,
                                          :include_start_time => false,
                                          :include_end_time => true,
                                          :default => (params[:id] ? @sub_request.mandatory_end : @shift.end),
                                          } %>
  </p>
  <p><h3>Maximum amount of time you're willing to give up (bribe):</h3></p>
  <p>
    <%= f.label :start %><br />
    <%= f.time_select :start, {
                                          :simple_time_select => true,
                                          :time_separator => "",
                                          :minute_interval => @department.department_config.time_increment,

                                          :start_time => @shift.start,
                                          :end_time => @shift.end,
                                          :include_start_time => true,
                                          :include_end_time => false,
                                          :default => (params[:id] ? @sub_request.start : @shift.start),

#### Fewer options:
#:simple_time_select => true,
#:time_separator => "",
#:minute_interval => @department.department_config.time_increment,
#:shift => start_time, end_time, shift_date
#:start_or_end include_start_time or include_end_time




                                          } %>

  </p>
  <p>
    <%= f.label :end %><br />
    <%= f.time_select :end, {
                                          :simple_time_select => true,
                                          :time_separator => "",
                                          :minute_interval => @department.department_config.time_increment,

                                          :start_time => @shift.start,
                                          :end_time => @shift.end,
                                          :include_start_time => false,
                                          :include_end_time => true,
                                          :default => (params[:id] ? @sub_request.end : @shift.end),
                                          } %>
  </p>
    <%= label_tag "Leave blank to send to everyone eligible in <b>#{@sub_request.shift.location.loc_group.name}</b>, or specify below" %><br />
    <%= tokenized_users_autocomplete(@sub_request, "user_sources", "list_of_logins") %>
  </p>
  <p>
    <%= f.label :reason %><br />
    <%= f.text_area :reason, :size => "50x3" %>
  </p>
    <%= f.submit 'Submit' %>
  </p>
<% end %>

